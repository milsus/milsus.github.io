function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Alert=function(e){var t="alert",n="4.0.0-alpha.5",r="bs.alert",i="."+r,o=".data-api",a=e.fn[t],s=150,l={DISMISS:'[data-dismiss="alert"]'},c={CLOSE:"close"+i,CLOSED:"closed"+i,CLICK_DATA_API:"click"+i+o},u={ALERT:"alert",FADE:"fade",IN:"in"},f=function(){function t(e){_classCallCheck(this,t),this._element=e}return t.prototype.close=function(e){e=e||this._element;var t=this._getRootElement(e),n=this._triggerCloseEvent(t);n.isDefaultPrevented()||this._removeElement(t)},t.prototype.dispose=function(){e.removeData(this._element,r),this._element=null},t.prototype._getRootElement=function(t){var n=Util.getSelectorFromElement(t),r=!1;return n&&(r=e(n)[0]),r||(r=e(t).closest("."+u.ALERT)[0]),r},t.prototype._triggerCloseEvent=function(t){var n=e.Event(c.CLOSE);return e(t).trigger(n),n},t.prototype._removeElement=function(t){return e(t).removeClass(u.IN),Util.supportsTransitionEnd()&&e(t).hasClass(u.FADE)?void e(t).one(Util.TRANSITION_END,e.proxy(this._destroyElement,this,t)).emulateTransitionEnd(s):void this._destroyElement(t)},t.prototype._destroyElement=function(t){e(t).detach().trigger(c.CLOSED).remove()},t._jQueryInterface=function(n){return this.each(function(){var i=e(this),o=i.data(r);o||(o=new t(this),i.data(r,o)),"close"===n&&o[n](this)})},t._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},_createClass(t,null,[{key:"VERSION",get:function(){return n}}]),t}();return e(document).on(c.CLICK_DATA_API,l.DISMISS,f._handleDismiss(new f)),e.fn[t]=f._jQueryInterface,e.fn[t].Constructor=f,e.fn[t].noConflict=function(){return e.fn[t]=a,f._jQueryInterface},f}(jQuery),_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Button=function(e){var t="button",n="4.0.0-alpha.5",r="bs.button",i="."+r,o=".data-api",a=e.fn[t],s={ACTIVE:"active",BUTTON:"btn",FOCUS:"focus"},l={DATA_TOGGLE_CARROT:'[data-toggle^="button"]',DATA_TOGGLE:'[data-toggle="buttons"]',INPUT:"input",ACTIVE:".active",BUTTON:".btn"},c={CLICK_DATA_API:"click"+i+o,FOCUS_BLUR_DATA_API:"focus"+i+o+" "+("blur"+i+o)},u=function(){function t(e){_classCallCheck(this,t),this._element=e}return t.prototype.toggle=function(){var t=!0,n=e(this._element).closest(l.DATA_TOGGLE)[0];if(n){var r=e(this._element).find(l.INPUT)[0];if(r){if("radio"===r.type)if(r.checked&&e(this._element).hasClass(s.ACTIVE))t=!1;else{var i=e(n).find(l.ACTIVE)[0];i&&e(i).removeClass(s.ACTIVE)}t&&(r.checked=!e(this._element).hasClass(s.ACTIVE),e(this._element).trigger("change")),r.focus()}}else this._element.setAttribute("aria-pressed",!e(this._element).hasClass(s.ACTIVE));t&&e(this._element).toggleClass(s.ACTIVE)},t.prototype.dispose=function(){e.removeData(this._element,r),this._element=null},t._jQueryInterface=function(n){return this.each(function(){var i=e(this).data(r);i||(i=new t(this),e(this).data(r,i)),"toggle"===n&&i[n]()})},_createClass(t,null,[{key:"VERSION",get:function(){return n}}]),t}();return e(document).on(c.CLICK_DATA_API,l.DATA_TOGGLE_CARROT,function(t){t.preventDefault();var n=t.target;e(n).hasClass(s.BUTTON)||(n=e(n).closest(l.BUTTON)),u._jQueryInterface.call(e(n),"toggle")}).on(c.FOCUS_BLUR_DATA_API,l.DATA_TOGGLE_CARROT,function(t){var n=e(t.target).closest(l.BUTTON)[0];e(n).toggleClass(s.FOCUS,/^focus(in)?$/.test(t.type))}),e.fn[t]=u._jQueryInterface,e.fn[t].Constructor=u,e.fn[t].noConflict=function(){return e.fn[t]=a,u._jQueryInterface},u}(jQuery),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Collapse=function(e){var t="collapse",n="4.0.0-alpha.5",r="bs.collapse",i="."+r,o=".data-api",a=e.fn[t],s=600,l={toggle:!0,parent:""},c={toggle:"boolean",parent:"string"},u={SHOW:"show"+i,SHOWN:"shown"+i,HIDE:"hide"+i,HIDDEN:"hidden"+i,CLICK_DATA_API:"click"+i+o},f={IN:"in",COLLAPSE:"collapse",COLLAPSING:"collapsing",COLLAPSED:"collapsed"},h={WIDTH:"width",HEIGHT:"height"},d={ACTIVES:".card > .in, .card > .collapsing",DATA_TOGGLE:'[data-toggle="collapse"]'},p=function(){function i(t,n){_classCallCheck(this,i),this._isTransitioning=!1,this._element=t,this._config=this._getConfig(n),this._triggerArray=e.makeArray(e('[data-toggle="collapse"][href="#'+t.id+'"],'+('[data-toggle="collapse"][data-target="#'+t.id+'"]'))),this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}return i.prototype.toggle=function(){e(this._element).hasClass(f.IN)?this.hide():this.show()},i.prototype.show=function(){var t=this;if(!this._isTransitioning&&!e(this._element).hasClass(f.IN)){var n=void 0,o=void 0;if(this._parent&&(n=e.makeArray(e(d.ACTIVES)),n.length||(n=null)),!(n&&(o=e(n).data(r),o&&o._isTransitioning))){var a=e.Event(u.SHOW);if(e(this._element).trigger(a),!a.isDefaultPrevented()){n&&(i._jQueryInterface.call(e(n),"hide"),o||e(n).data(r,null));var l=this._getDimension();e(this._element).removeClass(f.COLLAPSE).addClass(f.COLLAPSING),this._element.style[l]=0,this._element.setAttribute("aria-expanded",!0),this._triggerArray.length&&e(this._triggerArray).removeClass(f.COLLAPSED).attr("aria-expanded",!0),this.setTransitioning(!0);var c=function(){e(t._element).removeClass(f.COLLAPSING).addClass(f.COLLAPSE).addClass(f.IN),t._element.style[l]="",t.setTransitioning(!1),e(t._element).trigger(u.SHOWN)};if(!Util.supportsTransitionEnd())return void c();var h=l[0].toUpperCase()+l.slice(1),p="scroll"+h;e(this._element).one(Util.TRANSITION_END,c).emulateTransitionEnd(s),this._element.style[l]=this._element[p]+"px"}}}},i.prototype.hide=function(){var t=this;if(!this._isTransitioning&&e(this._element).hasClass(f.IN)){var n=e.Event(u.HIDE);if(e(this._element).trigger(n),!n.isDefaultPrevented()){var r=this._getDimension(),i=r===h.WIDTH?"offsetWidth":"offsetHeight";this._element.style[r]=this._element[i]+"px",Util.reflow(this._element),e(this._element).addClass(f.COLLAPSING).removeClass(f.COLLAPSE).removeClass(f.IN),this._element.setAttribute("aria-expanded",!1),this._triggerArray.length&&e(this._triggerArray).addClass(f.COLLAPSED).attr("aria-expanded",!1),this.setTransitioning(!0);var o=function(){t.setTransitioning(!1),e(t._element).removeClass(f.COLLAPSING).addClass(f.COLLAPSE).trigger(u.HIDDEN)};return this._element.style[r]="",Util.supportsTransitionEnd()?void e(this._element).one(Util.TRANSITION_END,o).emulateTransitionEnd(s):void o()}}},i.prototype.setTransitioning=function(e){this._isTransitioning=e},i.prototype.dispose=function(){e.removeData(this._element,r),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},i.prototype._getConfig=function(n){return n=e.extend({},l,n),n.toggle=Boolean(n.toggle),Util.typeCheckConfig(t,n,c),n},i.prototype._getDimension=function(){var t=e(this._element).hasClass(h.WIDTH);return t?h.WIDTH:h.HEIGHT},i.prototype._getParent=function(){var t=this,n=e(this._config.parent)[0],r='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]';return e(n).find(r).each(function(e,n){t._addAriaAndCollapsedClass(i._getTargetFromElement(n),[n])}),n},i.prototype._addAriaAndCollapsedClass=function(t,n){if(t){var r=e(t).hasClass(f.IN);t.setAttribute("aria-expanded",r),n.length&&e(n).toggleClass(f.COLLAPSED,!r).attr("aria-expanded",r)}},i._getTargetFromElement=function(t){var n=Util.getSelectorFromElement(t);return n?e(n)[0]:null},i._jQueryInterface=function(t){return this.each(function(){var n=e(this),o=n.data(r),a=e.extend({},l,n.data(),"object"===("undefined"==typeof t?"undefined":_typeof(t))&&t);if(!o&&a.toggle&&/show|hide/.test(t)&&(a.toggle=!1),o||(o=new i(this,a),n.data(r,o)),"string"==typeof t){if(void 0===o[t])throw new Error('No method named "'+t+'"');o[t]()}})},_createClass(i,null,[{key:"VERSION",get:function(){return n}},{key:"Default",get:function(){return l}}]),i}();return e(document).on(u.CLICK_DATA_API,d.DATA_TOGGLE,function(t){t.preventDefault();var n=p._getTargetFromElement(this),i=e(n).data(r),o=i?"toggle":e(this).data();p._jQueryInterface.call(e(n),o)}),e.fn[t]=p._jQueryInterface,e.fn[t].Constructor=p,e.fn[t].noConflict=function(){return e.fn[t]=a,p._jQueryInterface},p}(jQuery),_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Dropdown=function(e){var t="dropdown",n="4.0.0-alpha.5",r="bs.dropdown",i="."+r,o=".data-api",a=e.fn[t],s=27,l=38,c=40,u=3,f={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,CLICK:"click"+i,CLICK_DATA_API:"click"+i+o,KEYDOWN_DATA_API:"keydown"+i+o},h={BACKDROP:"dropdown-backdrop",DISABLED:"disabled",OPEN:"open"},d={BACKDROP:".dropdown-backdrop",DATA_TOGGLE:'[data-toggle="dropdown"]',FORM_CHILD:".dropdown form",ROLE_MENU:'[role="menu"]',ROLE_LISTBOX:'[role="listbox"]',NAVBAR_NAV:".navbar-nav",VISIBLE_ITEMS:'[role="menu"] li:not(.disabled) a, [role="listbox"] li:not(.disabled) a'},p=function(){function t(e){_classCallCheck(this,t),this._element=e,this._addEventListeners()}return t.prototype.toggle=function(){if(this.disabled||e(this).hasClass(h.DISABLED))return!1;var n=t._getParentFromElement(this),r=e(n).hasClass(h.OPEN);if(t._clearMenus(),r)return!1;if("ontouchstart"in document.documentElement&&!e(n).closest(d.NAVBAR_NAV).length){var i=document.createElement("div");i.className=h.BACKDROP,e(i).insertBefore(this),e(i).on("click",t._clearMenus)}var o={relatedTarget:this},a=e.Event(f.SHOW,o);return e(n).trigger(a),!a.isDefaultPrevented()&&(this.focus(),this.setAttribute("aria-expanded","true"),e(n).toggleClass(h.OPEN),e(n).trigger(e.Event(f.SHOWN,o)),!1)},t.prototype.dispose=function(){e.removeData(this._element,r),e(this._element).off(i),this._element=null},t.prototype._addEventListeners=function(){e(this._element).on(f.CLICK,this.toggle)},t._jQueryInterface=function(n){return this.each(function(){var i=e(this).data(r);if(i||e(this).data(r,i=new t(this)),"string"==typeof n){if(void 0===i[n])throw new Error('No method named "'+n+'"');i[n].call(this)}})},t._clearMenus=function(n){if(!n||n.which!==u){var r=e(d.BACKDROP)[0];r&&r.parentNode.removeChild(r);for(var i=e.makeArray(e(d.DATA_TOGGLE)),o=0;o<i.length;o++){var a=t._getParentFromElement(i[o]),s={relatedTarget:i[o]};if(e(a).hasClass(h.OPEN)&&!(n&&"click"===n.type&&/input|textarea/i.test(n.target.tagName)&&e.contains(a,n.target))){var l=e.Event(f.HIDE,s);e(a).trigger(l),l.isDefaultPrevented()||(i[o].setAttribute("aria-expanded","false"),e(a).removeClass(h.OPEN).trigger(e.Event(f.HIDDEN,s)))}}}},t._getParentFromElement=function(t){var n=void 0,r=Util.getSelectorFromElement(t);return r&&(n=e(r)[0]),n||t.parentNode},t._dataApiKeydownHandler=function(n){if(/(38|40|27|32)/.test(n.which)&&!/input|textarea/i.test(n.target.tagName)&&(n.preventDefault(),n.stopPropagation(),!this.disabled&&!e(this).hasClass(h.DISABLED))){var r=t._getParentFromElement(this),i=e(r).hasClass(h.OPEN);if(!i&&n.which!==s||i&&n.which===s){if(n.which===s){var o=e(r).find(d.DATA_TOGGLE)[0];e(o).trigger("focus")}return void e(this).trigger("click")}var a=e.makeArray(e(d.VISIBLE_ITEMS));if(a=a.filter(function(e){return e.offsetWidth||e.offsetHeight}),a.length){var u=a.indexOf(n.target);n.which===l&&u>0&&u--,n.which===c&&u<a.length-1&&u++,u<0&&(u=0),a[u].focus()}}},_createClass(t,null,[{key:"VERSION",get:function(){return n}}]),t}();return e(document).on(f.KEYDOWN_DATA_API,d.DATA_TOGGLE,p._dataApiKeydownHandler).on(f.KEYDOWN_DATA_API,d.ROLE_MENU,p._dataApiKeydownHandler).on(f.KEYDOWN_DATA_API,d.ROLE_LISTBOX,p._dataApiKeydownHandler).on(f.CLICK_DATA_API,p._clearMenus).on(f.CLICK_DATA_API,d.DATA_TOGGLE,p.prototype.toggle).on(f.CLICK_DATA_API,d.FORM_CHILD,function(e){e.stopPropagation()}),e.fn[t]=p._jQueryInterface,e.fn[t].Constructor=p,e.fn[t].noConflict=function(){return e.fn[t]=a,p._jQueryInterface},p}(jQuery),_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),ScrollSpy=function(e){var t="scrollspy",n="4.0.0-alpha.5",r="bs.scrollspy",i="."+r,o=".data-api",a=e.fn[t],s={offset:10,method:"auto",target:""},l={offset:"number",method:"string",target:"(string|element)"},c={ACTIVATE:"activate"+i,SCROLL:"scroll"+i,LOAD_DATA_API:"load"+i+o},u={DROPDOWN_ITEM:"dropdown-item",DROPDOWN_MENU:"dropdown-menu",NAV_LINK:"nav-link",NAV:"nav",ACTIVE:"active"},f={DATA_SPY:'[data-spy="scroll"]',ACTIVE:".active",LIST_ITEM:".list-item",LI:"li",LI_DROPDOWN:"li.dropdown",NAV_LINKS:"a[href]",DROPDOWN:".dropdown",DROPDOWN_ITEMS:".dropdown-item",DROPDOWN_TOGGLE:".dropdown-toggle"},h={OFFSET:"offset",POSITION:"position"},d=function(){function o(t,n){_classCallCheck(this,o),this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(n),this._selector=this._config.target+" "+f.NAV_LINKS+","+(this._config.target+" "+f.DROPDOWN_ITEMS),this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,e(this._scrollElement).on(c.SCROLL,e.proxy(this._process,this)),this.refresh(),this._process()}return o.prototype.refresh=function(){var t=this,n=this._scrollElement!==this._scrollElement.window?h.POSITION:h.OFFSET,r="auto"===this._config.method?n:this._config.method,i=r===h.POSITION?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight();var o=e.makeArray(e(this._selector));o.map(function(t){var n=void 0,o=Util.getSelectorFromElement(t);return o&&(n=e(o)[0]),n&&(n.offsetWidth||n.offsetHeight)?[e(n)[r]().top+i,o]:null}).filter(function(e){return e}).sort(function(e,t){return e[0]-t[0]}).forEach(function(e){t._offsets.push(e[0]),t._targets.push(e[1])})},o.prototype.dispose=function(){e.removeData(this._element,r),e(this._scrollElement).off(i),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},o.prototype._getConfig=function(n){if(n=e.extend({},s,n),"string"!=typeof n.target){var r=e(n.target).attr("id");r||(r=Util.getUID(t),e(n.target).attr("id",r)),n.target="#"+r}return Util.typeCheckConfig(t,n,l),n},o.prototype._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.scrollY:this._scrollElement.scrollTop},o.prototype._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},o.prototype._process=function(){var e=this._getScrollTop()+this._config.offset,t=this._getScrollHeight(),n=this._config.offset+t-this._scrollElement.offsetHeight;if(this._scrollHeight!==t&&this.refresh(),e>=n){var r=this._targets[this._targets.length-1];this._activeTarget!==r&&this._activate(r)}if(this._activeTarget&&e<this._offsets[0])return this._activeTarget=null,void this._clear();for(var i=this._offsets.length;i--;){var o=this._activeTarget!==this._targets[i]&&e>=this._offsets[i]&&(void 0===this._offsets[i+1]||e<this._offsets[i+1]);o&&this._activate(this._targets[i])}},o.prototype._activate=function(t){this._activeTarget=t,this._clear();var n=this._selector.split(",");n=n.map(function(e){return e+'[data-target="'+t+'"],'+(e+'[href="'+t+'"]')});var r=e(n.join(","));r.hasClass(u.DROPDOWN_ITEM)?(r.closest(f.DROPDOWN).find(f.DROPDOWN_TOGGLE).addClass(u.ACTIVE),r.addClass(u.ACTIVE)):r.parents(f.LI).find(f.NAV_LINKS).addClass(u.ACTIVE),e(this._scrollElement).trigger(c.ACTIVATE,{relatedTarget:t})},o.prototype._clear=function(){e(this._selector).filter(f.ACTIVE).removeClass(u.ACTIVE)},o._jQueryInterface=function(t){return this.each(function(){var n=e(this).data(r),i="object"===("undefined"==typeof t?"undefined":_typeof(t))&&t||null;if(n||(n=new o(this,i),e(this).data(r,n)),"string"==typeof t){if(void 0===n[t])throw new Error('No method named "'+t+'"');n[t]()}})},_createClass(o,null,[{key:"VERSION",get:function(){return n}},{key:"Default",get:function(){return s}}]),o}();return e(window).on(c.LOAD_DATA_API,function(){for(var t=e.makeArray(e(f.DATA_SPY)),n=t.length;n--;){var r=e(t[n]);d._jQueryInterface.call(r,r.data())}}),e.fn[t]=d._jQueryInterface,e.fn[t].Constructor=d,e.fn[t].noConflict=function(){return e.fn[t]=a,d._jQueryInterface},d}(jQuery),_createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),Tab=function(e){var t="tab",n="4.0.0-alpha.5",r="bs.tab",i="."+r,o=".data-api",a=e.fn[t],s=150,l={HIDE:"hide"+i,HIDDEN:"hidden"+i,SHOW:"show"+i,SHOWN:"shown"+i,CLICK_DATA_API:"click"+i+o},c={DROPDOWN_MENU:"dropdown-menu",ACTIVE:"active",FADE:"fade",IN:"in"},u={A:"a",LI:"li",DROPDOWN:".dropdown",UL:"ul:not(.dropdown-menu)",FADE_CHILD:"> .nav-item .fade, > .fade",ACTIVE:".active",ACTIVE_CHILD:"> .nav-item > .active, > .active",DATA_TOGGLE:'[data-toggle="tab"], [data-toggle="pill"]',DROPDOWN_TOGGLE:".dropdown-toggle",DROPDOWN_ACTIVE_CHILD:"> .dropdown-menu .active"},f=function(){function t(e){_classCallCheck(this,t),this._element=e}return t.prototype.show=function(){var t=this;if(!this._element.parentNode||this._element.parentNode.nodeType!==Node.ELEMENT_NODE||!e(this._element).hasClass(c.ACTIVE)){var n=void 0,r=void 0,i=e(this._element).closest(u.UL)[0],o=Util.getSelectorFromElement(this._element);i&&(r=e.makeArray(e(i).find(u.ACTIVE)),r=r[r.length-1]);var a=e.Event(l.HIDE,{relatedTarget:this._element}),s=e.Event(l.SHOW,{relatedTarget:r});if(r&&e(r).trigger(a),e(this._element).trigger(s),!s.isDefaultPrevented()&&!a.isDefaultPrevented()){o&&(n=e(o)[0]),this._activate(this._element,i);var f=function(){var n=e.Event(l.HIDDEN,{relatedTarget:t._element}),i=e.Event(l.SHOWN,{relatedTarget:r});e(r).trigger(n),e(t._element).trigger(i)};n?this._activate(n,n.parentNode,f):f()}}},t.prototype.dispose=function(){e.removeClass(this._element,r),this._element=null},t.prototype._activate=function(t,n,r){var i=e(n).find(u.ACTIVE_CHILD)[0],o=r&&Util.supportsTransitionEnd()&&(i&&e(i).hasClass(c.FADE)||Boolean(e(n).find(u.FADE_CHILD)[0])),a=e.proxy(this._transitionComplete,this,t,i,o,r);i&&o?e(i).one(Util.TRANSITION_END,a).emulateTransitionEnd(s):a(),i&&e(i).removeClass(c.IN)},t.prototype._transitionComplete=function(t,n,r,i){if(n){e(n).removeClass(c.ACTIVE);var o=e(n).find(u.DROPDOWN_ACTIVE_CHILD)[0];o&&e(o).removeClass(c.ACTIVE),n.setAttribute("aria-expanded",!1)}if(e(t).addClass(c.ACTIVE),t.setAttribute("aria-expanded",!0),r?(Util.reflow(t),e(t).addClass(c.IN)):e(t).removeClass(c.FADE),t.parentNode&&e(t.parentNode).hasClass(c.DROPDOWN_MENU)){var a=e(t).closest(u.DROPDOWN)[0];a&&e(a).find(u.DROPDOWN_TOGGLE).addClass(c.ACTIVE),t.setAttribute("aria-expanded",!0)}i&&i()},t._jQueryInterface=function(n){return this.each(function(){var i=e(this),o=i.data(r);if(o||(o=o=new t(this),i.data(r,o)),"string"==typeof n){if(void 0===o[n])throw new Error('No method named "'+n+'"');o[n]()}})},_createClass(t,null,[{key:"VERSION",get:function(){return n}}]),t}();return e(document).on(l.CLICK_DATA_API,u.DATA_TOGGLE,function(t){t.preventDefault(),f._jQueryInterface.call(e(this),"show")}),e.fn[t]=f._jQueryInterface,e.fn[t].Constructor=f,e.fn[t].noConflict=function(){return e.fn[t]=a,f._jQueryInterface},f}(jQuery),Util=function(e){function t(e){return{}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}function n(e){return(e[0]||e).nodeType}function r(){return{bindType:s.end,delegateType:s.end,handle:function(t){if(e(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}}}function i(){if(window.QUnit)return!1;var e=document.createElement("bootstrap");for(var t in c)if(void 0!==e.style[t])return{end:c[t]};return!1}function o(t){var n=this,r=!1;return e(this).one(u.TRANSITION_END,function(){r=!0}),setTimeout(function(){r||u.triggerTransitionEnd(n)},t),this}function a(){s=i(),e.fn.emulateTransitionEnd=o,u.supportsTransitionEnd()&&(e.event.special[u.TRANSITION_END]=r())}var s=!1,l=1e6,c={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"},u={TRANSITION_END:"bsTransitionEnd",getUID:function(e){do e+=~~(Math.random()*l);while(document.getElementById(e));return e},getSelectorFromElement:function(e){var t=e.getAttribute("data-target");return t||(t=e.getAttribute("href")||"",t=/^#[a-z]/i.test(t)?t:null),t},reflow:function(e){new Function("bs","return bs")(e.offsetHeight)},triggerTransitionEnd:function(t){e(t).trigger(s.end)},supportsTransitionEnd:function(){return Boolean(s)},typeCheckConfig:function(e,r,i){for(var o in i)if(i.hasOwnProperty(o)){var a=i[o],s=r[o],l=void 0;if(l=s&&n(s)?"element":t(s),!new RegExp(a).test(l))throw new Error(e.toUpperCase()+": "+('Option "'+o+'" provided type "'+l+'" ')+('but expected type "'+a+'".'))}}};return a(),u}(jQuery);!function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.ScrollMagic=t()}(this,function(){"use strict";var e=function(){};e.version="2.0.5",window.addEventListener("mousewheel",function(){});var t="data-scrollmagic-pin-spacer";e.Controller=function(r){var o,a,s="ScrollMagic.Controller",l="FORWARD",c="REVERSE",u="PAUSED",f=n.defaults,h=this,d=i.extend({},f,r),p=[],g=!1,m=0,v=u,_=!0,y=0,C=!0,w=function(){for(var e in d)f.hasOwnProperty(e)||delete d[e];if(d.container=i.get.elements(d.container)[0],!d.container)throw s+" init failed.";_=d.container===window||d.container===document.body||!document.body.contains(d.container),_&&(d.container=window),y=A(),d.container.addEventListener("resize",S),d.container.addEventListener("scroll",S),d.refreshInterval=parseInt(d.refreshInterval)||f.refreshInterval,E()},E=function(){d.refreshInterval>0&&(a=window.setTimeout(O,d.refreshInterval))},T=function(){return d.vertical?i.get.scrollTop(d.container):i.get.scrollLeft(d.container)},A=function(){return d.vertical?i.get.height(d.container):i.get.width(d.container)},b=this._setScrollPos=function(e){d.vertical?_?window.scrollTo(i.get.scrollLeft(),e):d.container.scrollTop=e:_?window.scrollTo(e,i.get.scrollTop()):d.container.scrollLeft=e},I=function(){if(C&&g){var e=i.type.Array(g)?g:p.slice(0);g=!1;var t=m;m=h.scrollPos();var n=m-t;0!==n&&(v=n>0?l:c),v===c&&e.reverse(),e.forEach(function(e){e.update(!0)})}},D=function(){o=i.rAF(I)},S=function(e){"resize"==e.type&&(y=A(),v=u),g!==!0&&(g=!0,D())},O=function(){if(!_&&y!=A()){var e;try{e=new Event("resize",{bubbles:!1,cancelable:!1})}catch(t){e=document.createEvent("Event"),e.initEvent("resize",!1,!1)}d.container.dispatchEvent(e)}p.forEach(function(e){e.refresh()}),E()};this._options=d;var N=function(e){if(e.length<=1)return e;var t=e.slice(0);return t.sort(function(e,t){return e.scrollOffset()>t.scrollOffset()?1:-1}),t};return this.addScene=function(t){if(i.type.Array(t))t.forEach(function(e){h.addScene(e)});else if(t instanceof e.Scene)if(t.controller()!==h)t.addTo(h);else if(p.indexOf(t)<0){p.push(t),p=N(p),t.on("shift.controller_sort",function(){p=N(p)});for(var n in d.globalSceneOptions)t[n]&&t[n].call(t,d.globalSceneOptions[n])}return h},this.removeScene=function(e){if(i.type.Array(e))e.forEach(function(e){h.removeScene(e)});else{var t=p.indexOf(e);t>-1&&(e.off("shift.controller_sort"),p.splice(t,1),e.remove())}return h},this.updateScene=function(t,n){return i.type.Array(t)?t.forEach(function(e){h.updateScene(e,n)}):n?t.update(!0):g!==!0&&t instanceof e.Scene&&(g=g||[],-1==g.indexOf(t)&&g.push(t),g=N(g),D()),h},this.update=function(e){return S({type:"resize"}),e&&I(),h},this.scrollTo=function(n,r){if(i.type.Number(n))b.call(d.container,n,r);else if(n instanceof e.Scene)n.controller()===h&&h.scrollTo(n.scrollOffset(),r);else if(i.type.Function(n))b=n;else{var o=i.get.elements(n)[0];if(o){for(;o.parentNode.hasAttribute(t);)o=o.parentNode;var a=d.vertical?"top":"left",s=i.get.offset(d.container),l=i.get.offset(o);_||(s[a]-=h.scrollPos()),h.scrollTo(l[a]-s[a],r)}}return h},this.scrollPos=function(e){return arguments.length?(i.type.Function(e)&&(T=e),h):T.call(h)},this.info=function(e){var t={size:y,vertical:d.vertical,scrollPos:m,scrollDirection:v,container:d.container,isDocument:_};return arguments.length?void 0!==t[e]?t[e]:void 0:t},this.loglevel=function(){return h},this.enabled=function(e){return arguments.length?(C!=e&&(C=!!e,h.updateScene(p,!0)),h):C},this.destroy=function(e){window.clearTimeout(a);for(var t=p.length;t--;)p[t].destroy(e);return d.container.removeEventListener("resize",S),d.container.removeEventListener("scroll",S),i.cAF(o),null},w(),h};var n={defaults:{container:window,vertical:!0,globalSceneOptions:{},loglevel:2,refreshInterval:100}};e.Controller.addOption=function(e,t){n.defaults[e]=t},e.Controller.extend=function(t){var n=this;e.Controller=function(){return n.apply(this,arguments),this.$super=i.extend({},this),t.apply(this,arguments)||this},i.extend(e.Controller,n),e.Controller.prototype=n.prototype,e.Controller.prototype.constructor=e.Controller},e.Scene=function(n){var o,a,s="BEFORE",l="DURING",c="AFTER",u=r.defaults,f=this,h=i.extend({},u,n),d=s,p=0,g={start:0,end:0},m=0,v=!0,_=function(){for(var e in h)u.hasOwnProperty(e)||delete h[e];for(var t in u)D(t);b()},y={};this.on=function(e,t){return i.type.Function(t)&&(e=e.trim().split(" "),e.forEach(function(e){var n=e.split("."),r=n[0],i=n[1];"*"!=r&&(y[r]||(y[r]=[]),y[r].push({namespace:i||"",callback:t}))})),f},this.off=function(e,t){return e?(e=e.trim().split(" "),e.forEach(function(e){var n=e.split("."),r=n[0],i=n[1]||"",o="*"===r?Object.keys(y):[r];o.forEach(function(e){for(var n=y[e]||[],r=n.length;r--;){var o=n[r];!o||i!==o.namespace&&"*"!==i||t&&t!=o.callback||n.splice(r,1)}n.length||delete y[e]})}),f):f},this.trigger=function(t,n){if(t){var r=t.trim().split("."),i=r[0],o=r[1],a=y[i];a&&a.forEach(function(t){o&&o!==t.namespace||t.callback.call(f,new e.Event(i,t.namespace,f,n))})}return f},f.on("change.internal",function(e){"loglevel"!==e.what&&"tweenChanges"!==e.what&&("triggerElement"===e.what?E():"reverse"===e.what&&f.update())}).on("shift.internal",function(){C(),f.update()}),this.addTo=function(t){return t instanceof e.Controller&&a!=t&&(a&&a.removeScene(f),a=t,b(),w(!0),E(!0),C(),a.info("container").addEventListener("resize",T),t.addScene(f),f.trigger("add",{controller:a}),f.update()),f},this.enabled=function(e){return arguments.length?(v!=e&&(v=!!e,f.update(!0)),f):v},this.remove=function(){if(a){a.info("container").removeEventListener("resize",T);var e=a;a=void 0,e.removeScene(f),f.trigger("remove")}return f},this.destroy=function(e){return f.trigger("destroy",{reset:e}),f.remove(),f.off("*.*"),null},this.update=function(e){if(a)if(e)if(a.enabled()&&v){var t,n=a.info("scrollPos");t=h.duration>0?(n-g.start)/(g.end-g.start):n>=g.start?1:0,f.trigger("update",{startPos:g.start,endPos:g.end,scrollPos:n}),f.progress(t)}else S&&d===l&&N(!0);else a.updateScene(f,!1);return f},this.refresh=function(){return w(),E(),f},this.progress=function(e){if(arguments.length){var t=!1,n=d,r=a?a.info("scrollDirection"):"PAUSED",i=h.reverse||e>=p;if(0===h.duration?(t=p!=e,p=1>e&&i?0:1,d=0===p?s:l):0>e&&d!==s&&i?(p=0,d=s,t=!0):e>=0&&1>e&&i?(p=e,d=l,t=!0):e>=1&&d!==c?(p=1,d=c,t=!0):d!==l||i||N(),t){var o={progress:p,state:d,scrollDirection:r},u=d!=n,g=function(e){f.trigger(e,o)};u&&n!==l&&(g("enter"),g(n===s?"start":"end")),g("progress"),u&&d!==l&&(g(d===s?"start":"end"),g("leave"))}return f}return p};var C=function(){g={start:m+h.offset},a&&h.triggerElement&&(g.start-=a.info("size")*h.triggerHook),g.end=g.start+h.duration},w=function(e){if(o){var t="duration";I(t,o.call(f))&&!e&&(f.trigger("change",{what:t,newval:h[t]}),f.trigger("shift",{reason:t}))}},E=function(e){var n=0,r=h.triggerElement;if(a&&r){for(var o=a.info(),s=i.get.offset(o.container),l=o.vertical?"top":"left";r.parentNode.hasAttribute(t);)r=r.parentNode;var c=i.get.offset(r);o.isDocument||(s[l]-=a.scrollPos()),n=c[l]-s[l]}var u=n!=m;m=n,u&&!e&&f.trigger("shift",{reason:"triggerElementPosition"})},T=function(){h.triggerHook>0&&f.trigger("shift",{reason:"containerResize"})},A=i.extend(r.validate,{duration:function(e){if(i.type.String(e)&&e.match(/^(\.|\d)*\d+%$/)){var t=parseFloat(e)/100;e=function(){return a?a.info("size")*t:0}}if(i.type.Function(e)){o=e;try{e=parseFloat(o())}catch(t){e=-1}}if(e=parseFloat(e),!i.type.Number(e)||0>e)throw o?(o=void 0,0):0;return e}}),b=function(e){e=arguments.length?[e]:Object.keys(A),e.forEach(function(e){var t;if(A[e])try{t=A[e](h[e])}catch(n){t=u[e]}finally{h[e]=t}})},I=function(e,t){var n=!1,r=h[e];return h[e]!=t&&(h[e]=t,b(e),n=r!=h[e]),n},D=function(e){f[e]||(f[e]=function(t){return arguments.length?("duration"===e&&(o=void 0),I(e,t)&&(f.trigger("change",{what:e,newval:h[e]}),r.shifts.indexOf(e)>-1&&f.trigger("shift",{reason:e})),f):h[e]})};this.controller=function(){return a},this.state=function(){return d},this.scrollOffset=function(){return g.start},this.triggerPosition=function(){var e=h.offset;return a&&(e+=h.triggerElement?m:a.info("size")*f.triggerHook()),e};var S,O;f.on("shift.internal",function(e){var t="duration"===e.reason;(d===c&&t||d===l&&0===h.duration)&&N(),t&&L()}).on("progress.internal",function(){N()}).on("add.internal",function(){L()}).on("destroy.internal",function(e){f.removePin(e.reset)});var N=function(e){if(S&&a){var t=a.info(),n=O.spacer.firstChild;if(e||d!==l){var r={position:O.inFlow?"relative":"absolute",top:0,left:0},o=i.css(n,"position")!=r.position;O.pushFollowers?h.duration>0&&(d===c&&0===parseFloat(i.css(O.spacer,"padding-top"))?o=!0:d===s&&0===parseFloat(i.css(O.spacer,"padding-bottom"))&&(o=!0)):r[t.vertical?"top":"left"]=h.duration*p,i.css(n,r),o&&L()}else{"fixed"!=i.css(n,"position")&&(i.css(n,{position:"fixed"}),L());var u=i.get.offset(O.spacer,!0),f=h.reverse||0===h.duration?t.scrollPos-g.start:Math.round(p*h.duration*10)/10;u[t.vertical?"top":"left"]+=f,i.css(O.spacer.firstChild,{top:u.top,left:u.left})}}},L=function(){if(S&&a&&O.inFlow){var e=d===l,t=a.info("vertical"),n=O.spacer.firstChild,r=i.isMarginCollapseType(i.css(O.spacer,"display")),o={};O.relSize.width||O.relSize.autoFullWidth?e?i.css(S,{width:i.get.width(O.spacer)}):i.css(S,{width:"100%"}):(o["min-width"]=i.get.width(t?S:n,!0,!0),
o.width=e?o["min-width"]:"auto"),O.relSize.height?e?i.css(S,{height:i.get.height(O.spacer)-(O.pushFollowers?h.duration:0)}):i.css(S,{height:"100%"}):(o["min-height"]=i.get.height(t?n:S,!0,!r),o.height=e?o["min-height"]:"auto"),O.pushFollowers&&(o["padding"+(t?"Top":"Left")]=h.duration*p,o["padding"+(t?"Bottom":"Right")]=h.duration*(1-p)),i.css(O.spacer,o)}},P=function(){a&&S&&d===l&&!a.info("isDocument")&&N()},x=function(){a&&S&&d===l&&((O.relSize.width||O.relSize.autoFullWidth)&&i.get.width(window)!=i.get.width(O.spacer.parentNode)||O.relSize.height&&i.get.height(window)!=i.get.height(O.spacer.parentNode))&&L()},H=function(e){a&&S&&d===l&&!a.info("isDocument")&&(e.preventDefault(),a._setScrollPos(a.info("scrollPos")-((e.wheelDelta||e[a.info("vertical")?"wheelDeltaY":"wheelDeltaX"])/3||30*-e.detail)))};this.setPin=function(e,n){var r={pushFollowers:!0,spacerClass:"scrollmagic-pin-spacer"};if(n=i.extend({},r,n),e=i.get.elements(e)[0],!e)return f;if("fixed"===i.css(e,"position"))return f;if(S){if(S===e)return f;f.removePin()}S=e;var o=S.parentNode.style.display,a=["top","left","bottom","right","margin","marginLeft","marginRight","marginTop","marginBottom"];S.parentNode.style.display="none";var s="absolute"!=i.css(S,"position"),l=i.css(S,a.concat(["display"])),c=i.css(S,["width","height"]);S.parentNode.style.display=o,!s&&n.pushFollowers&&(n.pushFollowers=!1);var u=S.parentNode.insertBefore(document.createElement("div"),S),h=i.extend(l,{position:s?"relative":"absolute",boxSizing:"content-box",mozBoxSizing:"content-box",webkitBoxSizing:"content-box"});if(s||i.extend(h,i.css(S,["width","height"])),i.css(u,h),u.setAttribute(t,""),i.addClass(u,n.spacerClass),O={spacer:u,relSize:{width:"%"===c.width.slice(-1),height:"%"===c.height.slice(-1),autoFullWidth:"auto"===c.width&&s&&i.isMarginCollapseType(l.display)},pushFollowers:n.pushFollowers,inFlow:s},!S.___origStyle){S.___origStyle={};var d=S.style,p=a.concat(["width","height","position","boxSizing","mozBoxSizing","webkitBoxSizing"]);p.forEach(function(e){S.___origStyle[e]=d[e]||""})}return O.relSize.width&&i.css(u,{width:c.width}),O.relSize.height&&i.css(u,{height:c.height}),u.appendChild(S),i.css(S,{position:s?"relative":"absolute",margin:"auto",top:"auto",left:"auto",bottom:"auto",right:"auto"}),(O.relSize.width||O.relSize.autoFullWidth)&&i.css(S,{boxSizing:"border-box",mozBoxSizing:"border-box",webkitBoxSizing:"border-box"}),window.addEventListener("scroll",P),window.addEventListener("resize",P),window.addEventListener("resize",x),S.addEventListener("mousewheel",H),S.addEventListener("DOMMouseScroll",H),N(),f},this.removePin=function(e){if(S){if(d===l&&N(!0),e||!a){var n=O.spacer.firstChild;if(n.hasAttribute(t)){var r=O.spacer.style,o=["margin","marginLeft","marginRight","marginTop","marginBottom"];margins={},o.forEach(function(e){margins[e]=r[e]||""}),i.css(n,margins)}O.spacer.parentNode.insertBefore(n,O.spacer),O.spacer.parentNode.removeChild(O.spacer),S.parentNode.hasAttribute(t)||(i.css(S,S.___origStyle),delete S.___origStyle)}window.removeEventListener("scroll",P),window.removeEventListener("resize",P),window.removeEventListener("resize",x),S.removeEventListener("mousewheel",H),S.removeEventListener("DOMMouseScroll",H),S=void 0}return f};var k,F=[];return f.on("destroy.internal",function(e){f.removeClassToggle(e.reset)}),this.setClassToggle=function(e,t){var n=i.get.elements(e);return 0!==n.length&&i.type.String(t)?(F.length>0&&f.removeClassToggle(),k=t,F=n,f.on("enter.internal_class leave.internal_class",function(e){var t="enter"===e.type?i.addClass:i.removeClass;F.forEach(function(e){t(e,k)})}),f):f},this.removeClassToggle=function(e){return e&&F.forEach(function(e){i.removeClass(e,k)}),f.off("start.internal_class end.internal_class"),k=void 0,F=[],f},_(),f};var r={defaults:{duration:0,offset:0,triggerElement:void 0,triggerHook:.5,reverse:!0,loglevel:2},validate:{offset:function(e){if(e=parseFloat(e),!i.type.Number(e))throw 0;return e},triggerElement:function(e){if(e=e||void 0){var t=i.get.elements(e)[0];if(!t)throw 0;e=t}return e},triggerHook:function(e){var t={onCenter:.5,onEnter:1,onLeave:0};if(i.type.Number(e))e=Math.max(0,Math.min(parseFloat(e),1));else{if(!(e in t))throw 0;e=t[e]}return e},reverse:function(e){return!!e}},shifts:["duration","offset","triggerHook"]};e.Scene.addOption=function(e,t,n,i){e in r.defaults||(r.defaults[e]=t,r.validate[e]=n,i&&r.shifts.push(e))},e.Scene.extend=function(t){var n=this;e.Scene=function(){return n.apply(this,arguments),this.$super=i.extend({},this),t.apply(this,arguments)||this},i.extend(e.Scene,n),e.Scene.prototype=n.prototype,e.Scene.prototype.constructor=e.Scene},e.Event=function(e,t,n,r){r=r||{};for(var i in r)this[i]=r[i];return this.type=e,this.target=this.currentTarget=n,this.namespace=t||"",this.timeStamp=this.timestamp=Date.now(),this};var i=e._util=function(e){var t,n={},r=function(e){return parseFloat(e)||0},i=function(t){return t.currentStyle?t.currentStyle:e.getComputedStyle(t)},o=function(t,n,o,a){if(n=n===document?e:n,n===e)a=!1;else if(!f.DomElement(n))return 0;t=t.charAt(0).toUpperCase()+t.substr(1).toLowerCase();var s=(o?n["offset"+t]||n["outer"+t]:n["client"+t]||n["inner"+t])||0;if(o&&a){var l=i(n);s+="Height"===t?r(l.marginTop)+r(l.marginBottom):r(l.marginLeft)+r(l.marginRight)}return s},a=function(e){return e.replace(/^[^a-z]+([a-z])/g,"$1").replace(/-([a-z])/g,function(e){return e[1].toUpperCase()})};n.extend=function(e){for(e=e||{},t=1;t<arguments.length;t++)if(arguments[t])for(var n in arguments[t])arguments[t].hasOwnProperty(n)&&(e[n]=arguments[t][n]);return e},n.isMarginCollapseType=function(e){return["block","flex","list-item","table","-webkit-box"].indexOf(e)>-1};var s=0,l=["ms","moz","webkit","o"],c=e.requestAnimationFrame,u=e.cancelAnimationFrame;for(t=0;!c&&t<l.length;++t)c=e[l[t]+"RequestAnimationFrame"],u=e[l[t]+"CancelAnimationFrame"]||e[l[t]+"CancelRequestAnimationFrame"];c||(c=function(t){var n=(new Date).getTime(),r=Math.max(0,16-(n-s)),i=e.setTimeout(function(){t(n+r)},r);return s=n+r,i}),u||(u=function(t){e.clearTimeout(t)}),n.rAF=c.bind(e),n.cAF=u.bind(e);var f=n.type=function(e){return Object.prototype.toString.call(e).replace(/^\[object (.+)\]$/,"$1").toLowerCase()};f.String=function(e){return"string"===f(e)},f.Function=function(e){return"function"===f(e)},f.Array=function(e){return Array.isArray(e)},f.Number=function(e){return!f.Array(e)&&e-parseFloat(e)+1>=0},f.DomElement=function(e){return"object"==typeof HTMLElement?e instanceof HTMLElement:e&&"object"==typeof e&&null!==e&&1===e.nodeType&&"string"==typeof e.nodeName};var h=n.get={};return h.elements=function(t){var n=[];if(f.String(t))try{t=document.querySelectorAll(t)}catch(e){return n}if("nodelist"===f(t)||f.Array(t))for(var r=0,i=n.length=t.length;i>r;r++){var o=t[r];n[r]=f.DomElement(o)?o:h.elements(o)}else(f.DomElement(t)||t===document||t===e)&&(n=[t]);return n},h.scrollTop=function(t){return t&&"number"==typeof t.scrollTop?t.scrollTop:e.pageYOffset||0},h.scrollLeft=function(t){return t&&"number"==typeof t.scrollLeft?t.scrollLeft:e.pageXOffset||0},h.width=function(e,t,n){return o("width",e,t,n)},h.height=function(e,t,n){return o("height",e,t,n)},h.offset=function(e,t){var n={top:0,left:0};if(e&&e.getBoundingClientRect){var r=e.getBoundingClientRect();n.top=r.top,n.left=r.left,t||(n.top+=h.scrollTop(),n.left+=h.scrollLeft())}return n},n.addClass=function(e,t){t&&(e.classList?e.classList.add(t):e.className+=" "+t)},n.removeClass=function(e,t){t&&(e.classList?e.classList.remove(t):e.className=e.className.replace(RegExp("(^|\\b)"+t.split(" ").join("|")+"(\\b|$)","gi")," "))},n.css=function(e,t){if(f.String(t))return i(e)[a(t)];if(f.Array(t)){var n={},r=i(e);return t.forEach(function(e){n[e]=r[a(e)]}),n}for(var o in t){var s=t[o];s==parseFloat(s)&&(s+="px"),e.style[a(o)]=s}},n}(window||{});return e}),!function(e,t){"function"==typeof define&&define.amd?define(["ScrollMagic","jquery.scrollmagic.min"],t):"object"==typeof exports?t(require("scrollmagic"),require("jquery")):t(e.ScrollMagic,e.jQuery)}(this,function(e,t){"use strict";e._util.get.elements=function(e){return t(e).toArray()},e._util.addClass=function(e,n){t(e).addClass(n)},e._util.removeClass=function(e,n){t(e).removeClass(n)},t.ScrollMagic=e}),!function(e){"use strict";var t=function(){var t=e("body"),n=e("<span>").css({display:"none",opacity:0,width:0,position:"absolute",left:-2e3}).appendTo(t),r={};return function(e){if(r[e])return r[e];var i=n.appendTo(t).css("color",e).css("color").match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+(?:\.\d+)?))?\)$/);return n.detach(),r[e]={r:Number(i[1]),g:Number(i[2]),b:Number(i[3]),a:Number(i[4])||1}}}(),n=function(e,n){return"number"!=typeof n&&(n=parseFloat(n)),isNaN(n)&&(n=1),n=Math.max(0,Math.min(n,1)),e=t(e),e.a=n,"rgba("+e.r+","+e.g+","+e.b+","+e.a+")"},r=function(e){return e=t(e),(299*e.r+587*e.g+114*e.b)/1e3<128};e.colorUtils={fade:n,isDark:r}}(jQuery),!function(e){"use strict";e.fn.delayed=function(t){var n=this,r=Array.prototype.slice.call(arguments,1);return t=e.isFunction(t)?t:e.isFunction(n[t])?n[t]:null,t&&n.queue(function(e){t.apply(n,r),e()}),this}}(jQuery),!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e:e(jQuery)}(function(e){function t(t){var a=t||window.event,s=l.call(arguments,1),c=0,f=0,h=0,d=0,p=0,g=0;if(t=e.event.fix(a),t.type="mousewheel","detail"in a&&(h=-1*a.detail),"wheelDelta"in a&&(h=a.wheelDelta),"wheelDeltaY"in a&&(h=a.wheelDeltaY),"wheelDeltaX"in a&&(f=-1*a.wheelDeltaX),"axis"in a&&a.axis===a.HORIZONTAL_AXIS&&(f=-1*h,h=0),c=0===h?f:h,"deltaY"in a&&(h=-1*a.deltaY,c=h),"deltaX"in a&&(f=a.deltaX,0===h&&(c=-1*f)),0!==h||0!==f){if(1===a.deltaMode){var m=e.data(this,"mousewheel-line-height");c*=m,h*=m,f*=m}else if(2===a.deltaMode){var v=e.data(this,"mousewheel-page-height");c*=v,h*=v,f*=v}if(d=Math.max(Math.abs(h),Math.abs(f)),(!o||o>d)&&(o=d,r(a,d)&&(o/=40)),r(a,d)&&(c/=40,f/=40,h/=40),c=Math[c>=1?"floor":"ceil"](c/o),f=Math[f>=1?"floor":"ceil"](f/o),h=Math[h>=1?"floor":"ceil"](h/o),u.settings.normalizeOffset&&this.getBoundingClientRect){var _=this.getBoundingClientRect();p=t.clientX-_.left,g=t.clientY-_.top}return t.deltaX=f,t.deltaY=h,t.deltaFactor=o,t.offsetX=p,t.offsetY=g,t.deltaMode=0,s.unshift(t,c,f,h),i&&clearTimeout(i),i=setTimeout(n,200),(e.event.dispatch||e.event.handle).apply(this,s)}}function n(){o=null}function r(e,t){return u.settings.adjustOldDeltas&&"mousewheel"===e.type&&t%120===0}var i,o,a=["wheel","mousewheel","DOMMouseScroll","MozMousePixelScroll"],s="onwheel"in document||document.documentMode>=9?["wheel"]:["mousewheel","DomMouseScroll","MozMousePixelScroll"],l=Array.prototype.slice;if(e.event.fixHooks)for(var c=a.length;c;)e.event.fixHooks[a[--c]]=e.event.mouseHooks;var u=e.event.special.mousewheel={version:"3.1.12",setup:function(){if(this.addEventListener)for(var n=s.length;n;)this.addEventListener(s[--n],t,!1);else this.onmousewheel=t;e.data(this,"mousewheel-line-height",u.getLineHeight(this)),e.data(this,"mousewheel-page-height",u.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var n=s.length;n;)this.removeEventListener(s[--n],t,!1);else this.onmousewheel=null;e.removeData(this,"mousewheel-line-height"),e.removeData(this,"mousewheel-page-height")},getLineHeight:function(t){var n=e(t),r=n["offsetParent"in e.fn?"offsetParent":"parent"]();return r.length||(r=e("body")),parseInt(r.css("fontSize"),10)||parseInt(n.css("fontSize"),10)||16},getPageHeight:function(t){return e(t).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};e.fn.extend({mousewheel:function(e){return e?this.bind("mousewheel",e):this.trigger("mousewheel")},unmousewheel:function(e){return this.unbind("mousewheel",e)}})}),!function(e,t){"use strict";e("[data-om-cc-category-nav]").on("change",function(){t.location.href=e(this).val()})}(jQuery,window),function(e,t){"use strict";var n,r=e(t),i=(e(t.document),991),o=e(".navbar-toggle"),a=function(){n=t.innerWidth>i};r.resize(a),a(),e(function(){e(".navbar .navbar-toggleable-md a[href]:not(.dropdown-toggle)").click(function(){n||o.click()})})}(jQuery,window),!function(e,t,n){"use strict";function r(){c.removeClass("body-hidden")}var i=t.document,o=i.body,a=t.navigator.userAgent,s=e("html"),l=e(i),c=e(o),u="true"===e("meta[name=ismobile]").prop("content");u&&a.match(/iP(hone|ad)/)&&a.match(/Safari/)&&s.addClass("is-ios-safari"),u&&a.match(/IEMobile/)&&(n.flexboxlegacy=!1,s.removeClass("flexboxlegacy").addClass("no-flexboxlegacy")),e.reactiveImages&&e.reactiveImages({lazyload:{offset:"-5%"}}),e('[data-vc-full-width-init="false"]').length?l.on("vc-full-width-row",r):r()}(jQuery,window,Modernizr),!function(e,t){"use strict";e(function(){if(!Modernizr.flexboxlegacy&&Modernizr.csstransforms){var n=e(".content-info"),r=0,i=function(){var i=e(t).height()-n.offset().top-n.outerHeight(),o="";(i>0||r>0)&&(r=Math.max(0,r+i),o="translateY("+r+"px)"),n.css("transform",o)};n.length&&(i(),setInterval(i,500))}})}(jQuery,window),!function(e,t){"use strict";var n=t.document,r=e(n),i=e(n.body),o=e(".navbar-wrapper"),a=e("nav.navbar"),s="navbar-wrapper-active",l={d:e("<style>").appendTo("head"),m:e("<style>").appendTo("head")},c={d:e("nav.navbar").hasClass("navbar-overlay"),m:e("nav.navbar").hasClass("navbar-mobile-overlay")},u=function(){var e,t=n.createElement("fakeelement"),r={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in r)if(void 0!==t.style[e])return r[e]},f=u(),h={classes:[]},d=e.extend({},h,a.data("omtNavbarPrimary")),p=e.extend({},h,a.data("omtNavbarSecondary")),g=991,m=t.innerWidth>g,v=function(e){e&&e.target!=a[0]||(m?a.hasClass("navbar-primary")?a.data("primaryHeight")||(a.data("primaryHeight",a.outerHeight()),y(a.data("primaryHeight"),"d")):a.hasClass("navbar-secondary")&&(a.data("secondaryHeight")||a.data("secondaryHeight",a.outerHeight())):a.data("mobileHeight")||(a.data("mobileHeight",a.outerHeight()),y(a.data("mobileHeight"),"m")))};a.on(f,v);var _=function(e){var n,i,l;m=t.innerWidth>g;var u=m?"d":"m";if(m?(n="wrapper-active",i="navbar-sticky",l="navbar-overlay"):(n="wrapper-active-mobile",i="navbar-mobile-sticky",l="navbar-mobile-overlay"),!o.hasClass(n)){if(a.hasClass(i)&&!c[u]){var f=m?a.data("primaryHeight")||a.outerHeight():a.data("mobileHeight")||a.outerHeight();y(f,u)}o.addClass(n),r.trigger(s)}},y=function(e,t){if(!c[t]){var n="",r="",i="d"===t;r=i?"min-width: "+(g+1)+"px":"max-width: "+g+"px","d"===t?n="@media("+r+") {.navbar-wrapper {height:"+e+"px;}}":"m"===t&&(n="@media("+r+") {.navbar-wrapper {height:"+e+"px;}}"),l[t]&&l[t].text(n)}};if(a.hasClass("navbar-use-secondary")){var C=function(t,n){var r=t.classes.join(" "),i=e(n.classes).not(t.classes).get().join(" ");return function(){a.addClass(r).removeClass(i)}},w=C(d,p),E=C(p,d);r.on("top.om.scroll-position",w).on("no-top.om.scroll-position",E),i.hasClass("no-window-scroll-top")?E():w(),v()}o.length&&a.length&&(e(t).resize(_),_());var T="collapse-hidden",A="collapse-hide",b="collapse-shown",I="collapse-show";a.on("hidden.bs.collapse",function(){e(this).addClass(T).removeClass([A,b,I].join(" "))}),a.on("hide.bs.collapse",function(){e(this).addClass(A).removeClass([T,b,I].join(" "))}),a.on("show.bs.collapse",function(){e(this).addClass(I).removeClass([T,b,A].join(" "))}),a.on("shown.bs.collapse",function(){e(this).addClass(b).removeClass([T,A,I].join(" "))})}(jQuery,window),!function(e,t){"use strict";e.extend(jQuery.easing,{omParabola:function(e){return e*(2-e)}});var n,r,i,o,a,s=t.performance&&1==t.performance.navigation.type,l=e(t),c=e(t.document),u=e("body"),f=991,h="#wpadminbar",d=function(){n=t.innerWidth>f,r=n?".navbar-sticky":".navbar-mobile-sticky",i=e(r).length>0,o=n?".wrapper-active .navbar-sticky":".wrapper-active-mobile .navbar-mobile-sticky",a=e(o)};l.resize(d),d();var p=function(t,n,r){r=r||"",n=n||0,e("html, body").stop(!1,!1).animate({scrollTop:t},{duration:n,easing:"omParabola",complete:function(){""!==r&&window.history&&window.history.pushState&&history.pushState("",document.title,r)}})},g=function(){a=e(o);var t,r=e(h);t=n?a.length&&(a.data("secondaryHeight")||a.data("primaryHeight")||a.parent().outerHeight())||0:a.length&&(a.data("mobileHeight")||a.parent().outerHeight())||0;var i=r.length&&r.height()||u.hasClass("admin-bar")&&32||0,s=e(location.hash).offset().top,l=s-t-i;p(l,150)};""===location.hash||s||(i&&a.length||!i?e(function(){setTimeout(g,1)}):c.on("navbar-wrapper-active",g),c.on("fonts-active",g));var m=function(e,t){return function(n){return(1-Math.exp(-n*t))*e}},v=700,_=.001,y=m(v,_);e(function(){var t=e(h);c.on("click",'a[href*="#"]:not([href="#"])',function(){var r=e(this);if(!r.parents(".vc_tta-panel-heading,.vc_tta-tabs-container,.vc_pagination").length&&(a=e(o),location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname)){var i,s=e(this.hash),c=this.href;i=n?a.length&&(a.data("secondaryHeight")||a.data("primaryHeight")||a.parent().outerHeight())||0:a.length&&(a.data("mobileHeight")||a.parent().outerHeight())||0;var u=t.length&&t.height()||0;if(s=s.length?s:e("[name="+this.hash.slice(1)+"]"),s.length){var f=s.offset().top-i-u,h=Math.abs(l.scrollTop()-f),d=y(h);return r.hasClass("unfocus")&&r.blur(),p(f,d,c),!1}}})})}(jQuery,window),function(e,t){"use strict";var n,r="om.scroll-position",i="."+r,o="top"+i,a="no-top"+i,s="no-",l="window-scroll-top",c=s+l,u=e(t),f=e(t.document),h=e(t.document.body),d=function(){var e,t,r,i=0===u.scrollTop();i!==n&&(n=i,n?(e=c,t=l,r=o):(e=l,t=c,r=a),h.removeClass(e).addClass(t),f.trigger(r))};u.scroll(d),d(),e(d)}(jQuery,window),function(e,t){"use strict";var n=e("select.form-control").select2({width:"100%"}).removeClass("select2-hidden-accessible").addClass("select2-hidden-custom");/iPad|iPhone|iPod/.test(navigator.userAgent)&&!t.MSStream&&n.off("focus.select2"),e(function(e){if(t.nfForms&&t.Marionette){var n=Marionette.Object.extend({initialize:function(){this.listenTo(nfRadio.channel("form"),"render:view",this.nfReady)},nfReady:function(n){var r=e("select.form-control:not(.select2-hidden-custom)").select2({width:"100%"}).removeClass("select2-hidden-accessible").addClass("select2-hidden-custom");/iPad|iPhone|iPod/.test(navigator.userAgent)&&!t.MSStream&&r.off("focus.select2")}});new n}})}(jQuery,window),!function(e,t){"use strict";function n(){clearTimeout(d),o.addClass("pre-loaded").delay(400).delayed("addClass","loaded").delayed("removeClass","pre-loaded").delayed(function(){i.addClass("splash-loaded")}).delay(o.data("omSplash")||400).delayed("addClass","hidden-xs-up")}var r=e(t.document),i=e(t.document.body),o=e("[data-om-splash]"),a=e.Deferred(),s=e.proxy(a.resolve,a),l=e.Deferred(),c=e.proxy(l.resolve,l),u=e.Deferred(),f=e.proxy(u.resolve,u);e.when(l.promise(),u.promise()).then(s);var h=t.location,d=(h.origin+h.pathname,setTimeout(s,7e3));o.addClass("initiated"),t.om&&t.om.app&&t.om.app.fiw&&(t.om.app.fiw.googleFonts&&t.om.app.fiw.googleFonts.length>0||t.om.app.fiw.typekitId&&t.om.app.fiw.typekitId.length>0)?(e(function(){e("html").hasClass("wf-active")&&f()}),r.one("fonts-active",f)):f(),jQuery.isFunction(jQuery.fn.imagesLoaded)?i.imagesLoaded(c):setTimeout(c,1e3),e(function(){e.when(a.promise()).then(n)})}(jQuery,window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
